name: 11_MiddleWare_CICD

on:
  push:
    branches: [ master, fb-** ]
    paths:
      - '01_MiddleWare/**'
  workflow_run:
    workflows: ["02_Initial_Setup_All_Infra"]
    branches: [master]
    types: 
      - completed
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# CONFIGURATION
# For help, go to https://github.com/Azure/Actions
#
# 1. Set up the following secrets in your repository:
#   AZURE_FUNCTIONAPP_PUBLISH_PROFILE
#
# 2. Change these variables for your configuration:
env:
  AZURE_FUNCTIONAPP_NAME: your-app-name                 # set this to your application's name
  AZURE_FUNCTIONAPP_PACKAGE_PATH: './01_MiddleWare/'    # set this to the path to your web app project, defaults to the repository root
  DOTNET_VERSION: '3.1.408'                             # set this to the dotnet version to use

jobs:
  build-and-deploy:
    runs-on: windows-latest
    steps:
    - name: 'Checkout GitHub Action'
      uses: actions/checkout@master
    
    - name: 'Load env variable from file using pwsh'
      shell: pwsh
      run: 03_IaC/00_AzureCLI/10_LoadEnvVariables.ps1

    - name: Setup DotNet ${{ env.DOTNET_VERSION }} Environment
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: ${{ env.DOTNET_VERSION }}

    - name: 'Resolve Project Dependencies Using Dotnet'
      shell: pwsh
      run: |
        pushd './${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}'
        dotnet build --configuration Release --output ./output
        popd
    
    - name: Login via Az module
      uses: azure/login@v1
      with:
        creds: ${{secrets.AZURE_CREDENTIALS}}
        enable-AzPSSession: true
        
    - name: 'Run Azure Functions Action'
      uses: Azure/functions-action@v1
      id: fa
      with:
        app-name: ${{ env.projectPrefix }}middleware # $projectPrefix + "middleware"
        package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/output'